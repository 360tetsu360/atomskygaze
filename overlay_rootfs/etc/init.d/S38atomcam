#!/bin/sh
#
# build atomcam environment
#

case "$1" in
  start)
    echo "setup atomcam environment"
    mkdir -p /atom
    mount -t squashfs /dev/mtdblock2 /atom
    mount -t squashfs /dev/mtdblock3 /atom/system
    [ -f /media/mmc/configs ] || ( dd if=/dev/zero of=/media/mmc/configs bs=1M count=1 && mkfs.ext2 -F /media/mmc/configs )
    mount -t ext2 -o loop /media/mmc/configs /atom/configs
    if [ ! -f /atom/configs/.product_config -o ! -f /atom/configs/.user_config ] ; then
      echo "rebuild configs" >> /media/mmc/atomhack.log
      mount -t jffs2 /dev/mtdblock6 /mnt
      cp -p /mnt/.* /mnt/* /atom/configs 2> /dev/null
      echo 3 > /proc/sys/vm/drop_caches
      umount /mnt
      sync
    fi
    mount -t proc proc /atom/proc
    mount -o rbind /dev /atom/dev
    mount -t sysfs sysfs /atom/sys
    mount -o bind /run /atom/run
    mount -o bind /tmp /atom/tmp
    mount -o rbind /media /atom/media
    mkdir -p /tmp/system/bin
    cp /scripts/atom_init.sh /tmp/system/bin
    cp /scripts/mount_cifs.sh /tmp/system/bin/mount_cifs
    cp /scripts/rm.sh /tmp/system/bin/rm
    cp /scripts/mv.sh /tmp/system/bin/mv
    cp /usr/bin/curl /tmp/system/bin
    cp /usr/bin/find /tmp/system/bin/find_libc
    mkdir -p /tmp/system/modules
    mkdir -p /tmp/system/lib
    mount -o bind /lib /atom/tmp/system/lib
    cp -pr /atom/usr /tmp/system
    mkdir -p /tmp/system/usr/lib
    mount -o bind /tmp/system/usr /atom/usr
    cp /scripts/boa.sh /tmp/system/usr/boa/boa
    mount -o bind /usr/lib /atom/usr/lib
    cp -pr /atom/etc /tmp/system
    cp /etc/nsswitch.conf /tmp/system/etc
    mount -o bind /tmp/system/etc /atom/etc
    cp /bin/busybox /tmp/system/bin
    /scripts/set_crontab.sh
    mkdir -p /media/mmc/update
    mkdir -p /media/mmc/tmp
    rm -f /media/mmc/tmp/*
    mkdir -p /tmp/app
    touch /tmp/resolv.conf
    mkdir -p /tmp/log/lighttpd
    chown www-data:www-data /tmp/log/lighttpd

    insmod /lib/modules/3.10.14__isvp_swan_1.0__/extra/v4l2loopback.ko video_nr=1
    chroot /atom /tmp/system/bin/atom_init.sh
    renice -10 `pidof iCamera_app`
    count=0
    while :
    do
      res=`/scripts/cmd audio` 2> /dev/null
      [ "$res" = "on" -o "$res" = "off" ] && echo "=== iCamera_app callback OK ====" && break;
      sleep 0.5
      let count++
      if [ 20 -le $count ] ; then
        echo "=== iCamera_app callback error ==="
        sync
        sync
        sync
        reboot
        break
      fi
    done  ;;
  stop)
    killall -SIGUSR2 iCamera_app
  ;;
  restart|reload)
    "$0" stop
    "$0" start
  ;;
  *)
  echo "Usage: $0 {start|stop|restart}"
  exit 1
esac

exit $?
